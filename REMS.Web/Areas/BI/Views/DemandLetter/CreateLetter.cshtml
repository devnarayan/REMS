@{
    ViewBag.Title = "Demand Letter";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section topright{
    <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
        <h1 class="page-title txt-color-blueDark"><i class="fa fa-envelope"></i> Generate Demand Letter</h1>
    </div>
}
<div data-ng-app="BIApp" role="main">
    <!-- MAIN CONTENT -->
    <div id="content" data-ng-controller="DemandLetterController">

        <div id="MessageArea" class="alert alert-block alert-{{MessageClass}}" style="display:none;">
            <a class="close" data-dismiss="alert" href="#">×</a>
            <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> {{MessageTitle}}</h4>
            <p>
                {{Message}}
            </p>
        </div>

         <div class="row">

            <input type="hidden" value="" id="hdnSaleID" />
            <input type="hidden" value="" id="hdnSarchType" />
            <!-- widget grid -->
            <section id="widget-grid" class="" data-ng-init="CreateLetterInit()">
                <input type="hidden" id="hidFlatID" name="hidFlatID" />
                <!-- row -->
                <div class="row">
                    <!-- NEW WIDGET START -->
                    <article class="col-sm-12 col-md-12">
                        <!-- Widget ID (each widget will need unique ID)-->
                        <div class="jarviswidget" id="wid-id-2" data-widget-editbutton="false" data-widget-deletebutton="false">
                            <!-- widget div-->
                            <div>
                                <!-- widget content -->
                                <div class="widget-body fuelux">
                                    <form id="checkout-form"  class="smart-form" novalidate="novalidate">
                                        <div class="form-horizontal" id="fuelux-wizard">
                                            <div class="form-content">
                                                <div class="row">
                                                    <div class="col col-3">
                                                        <b>Property:</b><br />
                                                        <select name="TowerID" class="form-control" data-ng-change="TowerChange()" data-ng-model="Flat.TowerID" id="Towerid" required>
                                                            <option data-ng-repeat="pro in TowerList" value="{{ pro.TowerID }}">{{pro.TowerName }}</option>
                                                        </select>
                                                    </div>
                                                    <div class="col col-2">
                                                        <b>Flat:</b><br />
                                                        <select name="FlatID" class="form-control" data-ng-model="Flat.FlatID" id="FlatID" required>
                                                            <option value="All">All</option>
                                                            <option data-ng-repeat="fl in FlatList" value="{{ fl.FlatID }}">{{ fl.FlatNo }}</option>
                                                        </select>
                                                    </div>
                                                    <div class="col col-3">
                                                        <b>Due Date:</b>
                                                        <br />
                                                        <input type="date" id="datefrom" name="datefrom" style="height: 34px; width: 208px" class="form-control" required="required" />
                                                    </div>
                                                    <div class="col-md-3">
                                                        <br />
                                                        <input type="submit" value="Search" data-ng-click="SearchDemandLetter()" class="btn btn-sm btn-primary" />
                                                        <input type="submit" value="Save " data-ng-click="GanrateLetter()" class="btn btn-sm btn-success" />
                                                    </div>
                                                </div>
                                                <input type="hidden" name="hidsortby" id="hidsortby" />
                                                <br />
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="table-responsive" id="rptTableContent">
                                                            <table class="table table-bordered table-striped particular_tbl">
                                                                <thead>
                                                                    <tr>
                                                                        <th><input type="checkbox" name="selectall" id="selectall" onchange="checkall()" /> <b>All</b></th>
                                                                        <th>CustomerName></i></th>
                                                                        <th>FlatNo </th>
                                                                        <th>BSP Total </th>
                                                                        <th>BSP Paid </th>
                                                                        <th>PLC Total</th>
                                                                        <th>PLC Paid</th>
                                                                        <th>AC Total</th>
                                                                        <th>AC Paid</th>
                                                                        <th>AOC Total</th>
                                                                        <th>AOC Paid</th>
                                                                        <th>S. Tax Total</th>
                                                                        <th>S. Tax Paid</th>
                                                                        <th>Late Total</th>
                                                                        <th>Late Paid</th>
                                                                        <th>Transfer Total</th>
                                                                        <th>Transfer Paid</th>
                                                                        <th>Clearance Total</th>
                                                                        <th>Clearance Paid</th>
                                                                        @*<th><b>Action</b></th>*@
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr data-ng-repeat="sr in SearchList">
                                                                        <td><input type="checkbox" class="selectone" name="selectone" id="{{sr.SaleID}}" value="{{sr.SaleID}}" /></td>
                                                                        <td>{{sr.CustomerName}}</td>
                                                                        <td>{{sr.FlatNo}}</td>
                                                                        <td>{{sr.BSPTotal}}</td>
                                                                        <td>{{sr.BSPPaid}}</td>
                                                                        <td>{{sr.PLCTotal}}</td>
                                                                        <td>{{sr.PLCPaid}}</td>
                                                                        <td>{{sr.ACTotal}}</td>
                                                                        <td>{{sr.ACPaid}}</td>
                                                                        <td>{{sr.AOCTotal}}</td>
                                                                        <td>{{sr.AOCPaid}}</td>
                                                                        <td>{{sr.STaxTotal}}</td>
                                                                        <td>{{sr.STaxPaid}}</td>
                                                                        <td>{{sr.LateTotal}}</td>
                                                                        <td>{{sr.LatePaid}}</td>
                                                                        <td>{{sr.TransferTotal}}</td>
                                                                        <td>{{sr.TransferPaid}}</td>
                                                                        <td>{{sr.CTotal}}</td>
                                                                        <td>{{sr.CPaid}}</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <!-- end widget content -->
                            </div>
                            <!-- end widget div -->
                        </div>
                        <!-- end widget -->
                    </article>
                    <!-- WIDGET END -->
                </div>
                <!-- end row -->
            </section>

        </div>
        <!-- END MAIN CONTENT -->
    </div>
</div>

@section pagespecific {
<script src="~/AgController/DemandLetterjs.js"></script>
    <script type="text/javascript">

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

    </script>
    <script>
    $(document).ready(function () {
       // setdate();
        // GET CURRENT DATE
    });
    //function setdate() {
    //    var date = new Date();
    //    // GET YYYY, MM AND DD FROM THE DATE OBJECT
    //    var yyyy = date.getFullYear().toString();
    //    var mm = (date.getMonth() + 1).toString();
    //    var dd = date.getDate().toString();

    //    // CONVERT mm AND dd INTO chars
    //    var mmChars = mm.split('');
    //    var ddChars = dd.split('');

    //    // CONCAT THE STRINGS IN YYYY-MM-DD FORMAT
    //    var datestring = (mmChars[1] ? mm : "0" + mmChars[0]) + '/' + (ddChars[1] ? dd : "0" + ddChars[0]) + '/' + yyyy;

    //    $("#datefrom").val(datestring);
    //}


    function PrintSingleReceipt(v) {
        $('#loading').show();
        var tid = $(v).attr("title");
        var yourarray = [];
        yourarray.push(tid);
        $('#loading').hide();
        var searchtext = $("#searchby").val();
        if (searchtext == "DemandLetter1") {
            var murl = "/BI/Report/DemandLettertPrintAction/" + yourarray;
            window.open(murl, '_blank');
        } else {
            if (searchtext == "DemandLetter2") {
                var murl = "/BI/Report/DemandLettert2PrintAction/" + yourarray;
                window.open(murl, '_blank');
            } else {
                if (searchtext == "DemandLetter3") {
                    var murl = "/BI/Report/DemandLettert3PrintAction/" + yourarray;
                    window.open(murl, '_blank');
                }
            }
        }
    }
    </script>
    <script>
    function checkall() {
        if ($("#selectall").is(":checked")) {
            $(".selectone").prop('checked', true);
        }
        else {
            $(".selectone").prop('checked', false);
        }
    }

    //$(function () {
    //    $(".datecal").datepicker({
    //        changeMonth: true,
    //        changeYear: true,
    //        yearRange: '1914:2099',
    //        dateFormat: 'dd/mm/yy'
    //    });

    //});


    </script>

    <script type="text/javascript">

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        })

    </script>
}
